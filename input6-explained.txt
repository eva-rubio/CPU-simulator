0x0 0x3017	LDA   ACC = mem[0x17]	(operan must sign extend. acc = -5)
0x1 0x1007	ADD   ACC = ACC + mem[7] (-5 + -120 = -125)
0x2 0xc008	STRp  mem[mem[8](22)] = ACC
0x3 0x5014	INP   mem[0x14] = INP  =45
0x4 0x3014	LDA   ACC = mem[0x14]	(acc = 45)
0x5 0x7015	BRAgz  if acc>0 ; pc = mem[0x15] // pc=9
0x6 0xf000
0x7 0xff88	: -120
0x8 0x0016	: 22
0x9 0x200e	SUB  ACC = ACC - mem[0xe] (acc = 45-600 = -555)
0xa 0x400f	STRA  mem[0xf] = ACC
0xb 0x600f	OUT   print mem[0xf] = -555
0xc 0x5010	INP   mem[0x10] = INP  = -7
0xd 0x8011	BR#   pc = 0x11 = 17
0xe 0x0258	: 600
0xf 0xbbbb	to store -555
0x10 0x2222	to input -7
0x11 0x6010	(line 17) OUT print mem[0x10] = -7
0x12 0x0000	HALT PROGRAM. 
0x14 0x2222	(line 20) to input 45
0x15 0x0009	(line 21) :9 
0x16 0xbbbb	(line 22) to store -125 (ff83)
0x17 0xfffb	(line 23) : -5
0x6666 0x6666
45
-7